{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","handleSort","sortT","reorderedGoods","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","canReset","className","type","classNames","onClick","prevReverseStatus","ReactDOM","render","document","getElementById"],"mappings":"6KAsBKA,E,0EChBQC,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDAjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAuCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAWMC,EAAa,SAACC,GAClBF,EAAYE,IAGRC,EA7CD,SACLb,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENQ,EAAY,YAAOd,GAEzB,OAAQS,GACN,KAAKX,EAASiB,SACZD,EAAaE,MACX,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAExC,MAEF,KAAKpB,EAASsB,OACZN,EAAaE,MACX,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAQ7C,OAAOf,EACHQ,EAAaQ,UACbR,EAoBmBS,CACrBpB,EACA,CAAEG,aAAYG,aAEVe,EAAYf,IAAaX,EAASU,MAASF,EAEjD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaX,EAASiB,WAEtCa,QAAS,kBAAMjB,EAAWb,EAASiB,WANrC,iCAWA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaX,EAASsB,SAEtCQ,QAAS,kBAAMjB,EAAWb,EAASsB,SANrC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAlDc,WACpBrB,GAAc,SAACsB,GAAD,OAAyBA,MA2CnC,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAvDU,WAClBlB,EAAYZ,EAASU,MACrBD,GAAc,IAkDR,sBAUJ,cAAC,EAAD,CAAWP,MAAOa,QEhIxBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1e79b55d.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nimport React, { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort(\n        (good1, good2) => good1.localeCompare(good2),\n      );\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort(\n        (good1, good2) => good1.length - good2.length,\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleReverse = () => {\n    setIsReversed((prevReverseStatus) => (!prevReverseStatus));\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const handleSort = (sortT: SortType) => {\n    setSortType(sortT);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n  const canReset = (sortType !== SortType.NONE) || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => handleSort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => handleSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {canReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={reorderedGoods} />\n    </div>\n  );\n};\n","import { FC } from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}